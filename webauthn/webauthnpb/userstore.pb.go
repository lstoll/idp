// Code generated by protoc-gen-go. DO NOT EDIT.
// source: userstore.proto

package webauthnpb // import "github.com/lstoll/idp/webauthn/webauthnpb"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _ "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{0}
}
func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (dst *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(dst, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type GetUserResponse struct {
	User                 *WebauthnUser `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetUserResponse) Reset()         { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()    {}
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{1}
}
func (m *GetUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserResponse.Unmarshal(m, b)
}
func (m *GetUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserResponse.Marshal(b, m, deterministic)
}
func (dst *GetUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserResponse.Merge(dst, src)
}
func (m *GetUserResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserResponse.Size(m)
}
func (m *GetUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserResponse proto.InternalMessageInfo

func (m *GetUserResponse) GetUser() *WebauthnUser {
	if m != nil {
		return m.User
	}
	return nil
}

type AddAuthenticatorRequest struct {
	Username             string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Authenticator        *WebauthnAuthenticator `protobuf:"bytes,2,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AddAuthenticatorRequest) Reset()         { *m = AddAuthenticatorRequest{} }
func (m *AddAuthenticatorRequest) String() string { return proto.CompactTextString(m) }
func (*AddAuthenticatorRequest) ProtoMessage()    {}
func (*AddAuthenticatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{2}
}
func (m *AddAuthenticatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAuthenticatorRequest.Unmarshal(m, b)
}
func (m *AddAuthenticatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAuthenticatorRequest.Marshal(b, m, deterministic)
}
func (dst *AddAuthenticatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAuthenticatorRequest.Merge(dst, src)
}
func (m *AddAuthenticatorRequest) XXX_Size() int {
	return xxx_messageInfo_AddAuthenticatorRequest.Size(m)
}
func (m *AddAuthenticatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAuthenticatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAuthenticatorRequest proto.InternalMessageInfo

func (m *AddAuthenticatorRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddAuthenticatorRequest) GetAuthenticator() *WebauthnAuthenticator {
	if m != nil {
		return m.Authenticator
	}
	return nil
}

type GetAuthenticatorsResponse struct {
	Authenticators       []*WebauthnAuthenticator `protobuf:"bytes,1,rep,name=authenticators,proto3" json:"authenticators,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetAuthenticatorsResponse) Reset()         { *m = GetAuthenticatorsResponse{} }
func (m *GetAuthenticatorsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuthenticatorsResponse) ProtoMessage()    {}
func (*GetAuthenticatorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{3}
}
func (m *GetAuthenticatorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthenticatorsResponse.Unmarshal(m, b)
}
func (m *GetAuthenticatorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthenticatorsResponse.Marshal(b, m, deterministic)
}
func (dst *GetAuthenticatorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthenticatorsResponse.Merge(dst, src)
}
func (m *GetAuthenticatorsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuthenticatorsResponse.Size(m)
}
func (m *GetAuthenticatorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthenticatorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthenticatorsResponse proto.InternalMessageInfo

func (m *GetAuthenticatorsResponse) GetAuthenticators() []*WebauthnAuthenticator {
	if m != nil {
		return m.Authenticators
	}
	return nil
}

type GetAuthenticatorRequest struct {
	AuthenticatorId      []byte   `protobuf:"bytes,1,opt,name=authenticator_id,json=authenticatorId,proto3" json:"authenticator_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuthenticatorRequest) Reset()         { *m = GetAuthenticatorRequest{} }
func (m *GetAuthenticatorRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuthenticatorRequest) ProtoMessage()    {}
func (*GetAuthenticatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{4}
}
func (m *GetAuthenticatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthenticatorRequest.Unmarshal(m, b)
}
func (m *GetAuthenticatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthenticatorRequest.Marshal(b, m, deterministic)
}
func (dst *GetAuthenticatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthenticatorRequest.Merge(dst, src)
}
func (m *GetAuthenticatorRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuthenticatorRequest.Size(m)
}
func (m *GetAuthenticatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthenticatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthenticatorRequest proto.InternalMessageInfo

func (m *GetAuthenticatorRequest) GetAuthenticatorId() []byte {
	if m != nil {
		return m.AuthenticatorId
	}
	return nil
}

type GetAuthenticatorResponse struct {
	Authenticator        *WebauthnAuthenticator `protobuf:"bytes,1,opt,name=authenticator,proto3" json:"authenticator,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetAuthenticatorResponse) Reset()         { *m = GetAuthenticatorResponse{} }
func (m *GetAuthenticatorResponse) String() string { return proto.CompactTextString(m) }
func (*GetAuthenticatorResponse) ProtoMessage()    {}
func (*GetAuthenticatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{5}
}
func (m *GetAuthenticatorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthenticatorResponse.Unmarshal(m, b)
}
func (m *GetAuthenticatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthenticatorResponse.Marshal(b, m, deterministic)
}
func (dst *GetAuthenticatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthenticatorResponse.Merge(dst, src)
}
func (m *GetAuthenticatorResponse) XXX_Size() int {
	return xxx_messageInfo_GetAuthenticatorResponse.Size(m)
}
func (m *GetAuthenticatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthenticatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthenticatorResponse proto.InternalMessageInfo

func (m *GetAuthenticatorResponse) GetAuthenticator() *WebauthnAuthenticator {
	if m != nil {
		return m.Authenticator
	}
	return nil
}

type DeleteAuthenticatorRequest struct {
	AuthenticatorId      []byte   `protobuf:"bytes,1,opt,name=authenticator_id,json=authenticatorId,proto3" json:"authenticator_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAuthenticatorRequest) Reset()         { *m = DeleteAuthenticatorRequest{} }
func (m *DeleteAuthenticatorRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAuthenticatorRequest) ProtoMessage()    {}
func (*DeleteAuthenticatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{6}
}
func (m *DeleteAuthenticatorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAuthenticatorRequest.Unmarshal(m, b)
}
func (m *DeleteAuthenticatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAuthenticatorRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAuthenticatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAuthenticatorRequest.Merge(dst, src)
}
func (m *DeleteAuthenticatorRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAuthenticatorRequest.Size(m)
}
func (m *DeleteAuthenticatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAuthenticatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAuthenticatorRequest proto.InternalMessageInfo

func (m *DeleteAuthenticatorRequest) GetAuthenticatorId() []byte {
	if m != nil {
		return m.AuthenticatorId
	}
	return nil
}

type WebauthnUser struct {
	// a unique identifier for this user
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Display name
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Groups               []string `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	AuthenticatorIds     [][]byte `protobuf:"bytes,5,rep,name=authenticator_ids,json=authenticatorIds,proto3" json:"authenticator_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebauthnUser) Reset()         { *m = WebauthnUser{} }
func (m *WebauthnUser) String() string { return proto.CompactTextString(m) }
func (*WebauthnUser) ProtoMessage()    {}
func (*WebauthnUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{7}
}
func (m *WebauthnUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebauthnUser.Unmarshal(m, b)
}
func (m *WebauthnUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebauthnUser.Marshal(b, m, deterministic)
}
func (dst *WebauthnUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebauthnUser.Merge(dst, src)
}
func (m *WebauthnUser) XXX_Size() int {
	return xxx_messageInfo_WebauthnUser.Size(m)
}
func (m *WebauthnUser) XXX_DiscardUnknown() {
	xxx_messageInfo_WebauthnUser.DiscardUnknown(m)
}

var xxx_messageInfo_WebauthnUser proto.InternalMessageInfo

func (m *WebauthnUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *WebauthnUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WebauthnUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *WebauthnUser) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *WebauthnUser) GetAuthenticatorIds() [][]byte {
	if m != nil {
		return m.AuthenticatorIds
	}
	return nil
}

// WebauthnAuthenticator represents an authenticator device
type WebauthnAuthenticator struct {
	// user_id that this authenticator belongs to
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// How to reference this authenticator
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// if this is a usable, activated authenticator
	Active bool `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	// A code word to confirm the authenticatators activation request
	ActivationChallenge string `protobuf:"bytes,4,opt,name=activation_challenge,json=activationChallenge,proto3" json:"activation_challenge,omitempty"`
	// webauthn data
	Id                   []byte   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	CredentialId         []byte   `protobuf:"bytes,6,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Aaguid               []byte   `protobuf:"bytes,8,opt,name=aaguid,proto3" json:"aaguid,omitempty"`
	SignCount            uint32   `protobuf:"varint,9,opt,name=sign_count,json=signCount,proto3" json:"sign_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebauthnAuthenticator) Reset()         { *m = WebauthnAuthenticator{} }
func (m *WebauthnAuthenticator) String() string { return proto.CompactTextString(m) }
func (*WebauthnAuthenticator) ProtoMessage()    {}
func (*WebauthnAuthenticator) Descriptor() ([]byte, []int) {
	return fileDescriptor_userstore_242c0364dffa1572, []int{8}
}
func (m *WebauthnAuthenticator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebauthnAuthenticator.Unmarshal(m, b)
}
func (m *WebauthnAuthenticator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebauthnAuthenticator.Marshal(b, m, deterministic)
}
func (dst *WebauthnAuthenticator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebauthnAuthenticator.Merge(dst, src)
}
func (m *WebauthnAuthenticator) XXX_Size() int {
	return xxx_messageInfo_WebauthnAuthenticator.Size(m)
}
func (m *WebauthnAuthenticator) XXX_DiscardUnknown() {
	xxx_messageInfo_WebauthnAuthenticator.DiscardUnknown(m)
}

var xxx_messageInfo_WebauthnAuthenticator proto.InternalMessageInfo

func (m *WebauthnAuthenticator) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *WebauthnAuthenticator) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *WebauthnAuthenticator) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *WebauthnAuthenticator) GetActivationChallenge() string {
	if m != nil {
		return m.ActivationChallenge
	}
	return ""
}

func (m *WebauthnAuthenticator) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *WebauthnAuthenticator) GetCredentialId() []byte {
	if m != nil {
		return m.CredentialId
	}
	return nil
}

func (m *WebauthnAuthenticator) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *WebauthnAuthenticator) GetAaguid() []byte {
	if m != nil {
		return m.Aaguid
	}
	return nil
}

func (m *WebauthnAuthenticator) GetSignCount() uint32 {
	if m != nil {
		return m.SignCount
	}
	return 0
}

func init() {
	proto.RegisterType((*GetUserRequest)(nil), "lstoll.idp.webauthn.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "lstoll.idp.webauthn.GetUserResponse")
	proto.RegisterType((*AddAuthenticatorRequest)(nil), "lstoll.idp.webauthn.AddAuthenticatorRequest")
	proto.RegisterType((*GetAuthenticatorsResponse)(nil), "lstoll.idp.webauthn.GetAuthenticatorsResponse")
	proto.RegisterType((*GetAuthenticatorRequest)(nil), "lstoll.idp.webauthn.GetAuthenticatorRequest")
	proto.RegisterType((*GetAuthenticatorResponse)(nil), "lstoll.idp.webauthn.GetAuthenticatorResponse")
	proto.RegisterType((*DeleteAuthenticatorRequest)(nil), "lstoll.idp.webauthn.DeleteAuthenticatorRequest")
	proto.RegisterType((*WebauthnUser)(nil), "lstoll.idp.webauthn.WebauthnUser")
	proto.RegisterType((*WebauthnAuthenticator)(nil), "lstoll.idp.webauthn.WebauthnAuthenticator")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebAuthnUserServiceClient is the client API for WebAuthnUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebAuthnUserServiceClient interface {
	// GetUser returns the user
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	// AddAuthenticatorToUser should associate the given user with the given
	// authenticator
	AddAuthenticatorToUser(ctx context.Context, in *AddAuthenticatorRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// UserAuthenticators should return all the authenticators registered to the
	// given user
	UserAuthenticators(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetAuthenticatorsResponse, error)
	// GetAuthenticator returns the authenticator matching the provided ID
	GetAuthenticator(ctx context.Context, in *GetAuthenticatorRequest, opts ...grpc.CallOption) (*GetAuthenticatorResponse, error)
	// DeleteAuthenticator removes the authenticator from the system
	DeleteAuthenticator(ctx context.Context, in *DeleteAuthenticatorRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type webAuthnUserServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebAuthnUserServiceClient(cc *grpc.ClientConn) WebAuthnUserServiceClient {
	return &webAuthnUserServiceClient{cc}
}

func (c *webAuthnUserServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/lstoll.idp.webauthn.WebAuthnUserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webAuthnUserServiceClient) AddAuthenticatorToUser(ctx context.Context, in *AddAuthenticatorRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/lstoll.idp.webauthn.WebAuthnUserService/AddAuthenticatorToUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webAuthnUserServiceClient) UserAuthenticators(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetAuthenticatorsResponse, error) {
	out := new(GetAuthenticatorsResponse)
	err := c.cc.Invoke(ctx, "/lstoll.idp.webauthn.WebAuthnUserService/UserAuthenticators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webAuthnUserServiceClient) GetAuthenticator(ctx context.Context, in *GetAuthenticatorRequest, opts ...grpc.CallOption) (*GetAuthenticatorResponse, error) {
	out := new(GetAuthenticatorResponse)
	err := c.cc.Invoke(ctx, "/lstoll.idp.webauthn.WebAuthnUserService/GetAuthenticator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webAuthnUserServiceClient) DeleteAuthenticator(ctx context.Context, in *DeleteAuthenticatorRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/lstoll.idp.webauthn.WebAuthnUserService/DeleteAuthenticator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebAuthnUserServiceServer is the server API for WebAuthnUserService service.
type WebAuthnUserServiceServer interface {
	// GetUser returns the user
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	// AddAuthenticatorToUser should associate the given user with the given
	// authenticator
	AddAuthenticatorToUser(context.Context, *AddAuthenticatorRequest) (*empty.Empty, error)
	// UserAuthenticators should return all the authenticators registered to the
	// given user
	UserAuthenticators(context.Context, *GetUserRequest) (*GetAuthenticatorsResponse, error)
	// GetAuthenticator returns the authenticator matching the provided ID
	GetAuthenticator(context.Context, *GetAuthenticatorRequest) (*GetAuthenticatorResponse, error)
	// DeleteAuthenticator removes the authenticator from the system
	DeleteAuthenticator(context.Context, *DeleteAuthenticatorRequest) (*empty.Empty, error)
}

func RegisterWebAuthnUserServiceServer(s *grpc.Server, srv WebAuthnUserServiceServer) {
	s.RegisterService(&_WebAuthnUserService_serviceDesc, srv)
}

func _WebAuthnUserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebAuthnUserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lstoll.idp.webauthn.WebAuthnUserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebAuthnUserServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebAuthnUserService_AddAuthenticatorToUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAuthenticatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebAuthnUserServiceServer).AddAuthenticatorToUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lstoll.idp.webauthn.WebAuthnUserService/AddAuthenticatorToUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebAuthnUserServiceServer).AddAuthenticatorToUser(ctx, req.(*AddAuthenticatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebAuthnUserService_UserAuthenticators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebAuthnUserServiceServer).UserAuthenticators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lstoll.idp.webauthn.WebAuthnUserService/UserAuthenticators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebAuthnUserServiceServer).UserAuthenticators(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebAuthnUserService_GetAuthenticator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthenticatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebAuthnUserServiceServer).GetAuthenticator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lstoll.idp.webauthn.WebAuthnUserService/GetAuthenticator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebAuthnUserServiceServer).GetAuthenticator(ctx, req.(*GetAuthenticatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebAuthnUserService_DeleteAuthenticator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthenticatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebAuthnUserServiceServer).DeleteAuthenticator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lstoll.idp.webauthn.WebAuthnUserService/DeleteAuthenticator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebAuthnUserServiceServer).DeleteAuthenticator(ctx, req.(*DeleteAuthenticatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebAuthnUserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lstoll.idp.webauthn.WebAuthnUserService",
	HandlerType: (*WebAuthnUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _WebAuthnUserService_GetUser_Handler,
		},
		{
			MethodName: "AddAuthenticatorToUser",
			Handler:    _WebAuthnUserService_AddAuthenticatorToUser_Handler,
		},
		{
			MethodName: "UserAuthenticators",
			Handler:    _WebAuthnUserService_UserAuthenticators_Handler,
		},
		{
			MethodName: "GetAuthenticator",
			Handler:    _WebAuthnUserService_GetAuthenticator_Handler,
		},
		{
			MethodName: "DeleteAuthenticator",
			Handler:    _WebAuthnUserService_DeleteAuthenticator_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userstore.proto",
}

func init() { proto.RegisterFile("userstore.proto", fileDescriptor_userstore_242c0364dffa1572) }

var fileDescriptor_userstore_242c0364dffa1572 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x6d, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0x93, 0x34, 0x6d, 0xa6, 0xe9, 0x07, 0x9b, 0x92, 0x1a, 0x23, 0x44, 0xea, 0xf2, 0x23,
	0xa5, 0xc5, 0x11, 0x45, 0x1c, 0xa0, 0xb4, 0xa8, 0x54, 0x48, 0x08, 0x99, 0xa2, 0x4a, 0xfc, 0x20,
	0xf2, 0xc7, 0xe0, 0xac, 0xd8, 0x78, 0x8d, 0x77, 0x5d, 0x94, 0x13, 0xf4, 0x0c, 0xdc, 0x81, 0x43,
	0x22, 0x6f, 0x9c, 0xb4, 0x76, 0xed, 0x28, 0xa8, 0xff, 0x76, 0xde, 0xbc, 0x99, 0x79, 0x3b, 0x5e,
	0x3f, 0xd8, 0x4a, 0x04, 0xc6, 0x42, 0xf2, 0x18, 0xad, 0x28, 0xe6, 0x92, 0x93, 0x0e, 0x13, 0x92,
	0x33, 0x66, 0x51, 0x3f, 0xb2, 0x7e, 0xa3, 0xeb, 0x24, 0x72, 0x14, 0x1a, 0xcf, 0x03, 0xce, 0x03,
	0x86, 0x03, 0x45, 0x71, 0x93, 0x1f, 0x03, 0x49, 0xc7, 0x28, 0xa4, 0x33, 0x8e, 0xa6, 0x55, 0xc6,
	0xd3, 0x22, 0x01, 0xc7, 0x91, 0x9c, 0x4c, 0x93, 0xe6, 0x11, 0x6c, 0x9e, 0xa3, 0xfc, 0x2a, 0x30,
	0xb6, 0xf1, 0x57, 0x82, 0x42, 0x12, 0x03, 0xd6, 0xd2, 0xb9, 0xa1, 0x33, 0x46, 0x5d, 0xeb, 0x69,
	0xfd, 0x96, 0x3d, 0x8f, 0xcd, 0x0f, 0xb0, 0x35, 0x67, 0x8b, 0x88, 0x87, 0x02, 0xc9, 0x5b, 0x68,
	0xa4, 0x69, 0x45, 0x5d, 0x3f, 0xde, 0xb3, 0x4a, 0x24, 0x5a, 0x57, 0xd9, 0x41, 0x15, 0x2a, 0xba,
	0x79, 0xa3, 0xc1, 0xee, 0x89, 0xef, 0x9f, 0x24, 0x72, 0x84, 0xa1, 0xa4, 0x9e, 0x23, 0xf9, 0x32,
	0x0a, 0xc8, 0x67, 0xd8, 0x70, 0xee, 0xd6, 0xe8, 0x35, 0x35, 0xf7, 0xe5, 0xc2, 0xb9, 0xf9, 0x29,
	0xf9, 0x06, 0x26, 0x87, 0x27, 0xe7, 0x28, 0x73, 0x14, 0x31, 0xbf, 0x9d, 0x0d, 0x9b, 0x39, 0xb6,
	0xd0, 0xb5, 0x5e, 0xfd, 0x3f, 0xe7, 0x15, 0x3a, 0x98, 0x67, 0xb0, 0x5b, 0x1c, 0x38, 0xbb, 0xf9,
	0x01, 0x6c, 0xe7, 0xc8, 0x43, 0xea, 0xab, 0x0d, 0xb4, 0xed, 0xad, 0x1c, 0x7e, 0xe1, 0x9b, 0x0c,
	0xf4, 0xfb, 0x5d, 0x32, 0xd5, 0xf7, 0x96, 0xa4, 0x3d, 0x74, 0x49, 0xe7, 0x60, 0x9c, 0x21, 0x43,
	0x89, 0x0f, 0x95, 0xfd, 0x47, 0x83, 0xf6, 0xdd, 0xe7, 0xb0, 0xf0, 0x63, 0x13, 0x68, 0x28, 0xbc,
	0xa6, 0x70, 0x75, 0x26, 0x3b, 0xb0, 0x82, 0x63, 0x87, 0x32, 0xbd, 0xae, 0xc0, 0x69, 0x40, 0xba,
	0xd0, 0x0c, 0x62, 0x9e, 0x44, 0x42, 0x6f, 0xf4, 0xea, 0xfd, 0x96, 0x9d, 0x45, 0xe4, 0x10, 0x1e,
	0x15, 0x95, 0x09, 0x7d, 0xa5, 0x57, 0xef, 0xb7, 0xed, 0xed, 0x82, 0x34, 0x61, 0xfe, 0xad, 0xc1,
	0xe3, 0xd2, 0x6d, 0x2c, 0x14, 0xb9, 0x07, 0x6d, 0x9f, 0x8a, 0x88, 0x39, 0x93, 0xe1, 0x1d, 0xb1,
	0xeb, 0x19, 0xf6, 0x29, 0xa5, 0x74, 0xa1, 0xe9, 0x78, 0x92, 0x5e, 0xa3, 0x12, 0xbd, 0x66, 0x67,
	0x11, 0x79, 0x0d, 0x3b, 0xea, 0xe4, 0x48, 0xca, 0xc3, 0xa1, 0x37, 0x72, 0x18, 0xc3, 0x30, 0x40,
	0xbd, 0xa1, 0x5a, 0x74, 0x6e, 0x73, 0xa7, 0xb3, 0x14, 0xd9, 0x84, 0x1a, 0xf5, 0xf5, 0x15, 0xb5,
	0xdc, 0x1a, 0xf5, 0xc9, 0x3e, 0x6c, 0x78, 0x31, 0xfa, 0xa9, 0x54, 0x87, 0xa5, 0x7b, 0x6f, 0xaa,
	0x54, 0xfb, 0x16, 0xbc, 0xf0, 0xc9, 0x33, 0x80, 0x28, 0x71, 0x19, 0xf5, 0x86, 0x3f, 0x71, 0xa2,
	0xaf, 0x2a, 0x46, 0x6b, 0x8a, 0x7c, 0xc4, 0x89, 0x92, 0xe7, 0x04, 0x09, 0xf5, 0xf5, 0x35, 0x95,
	0xca, 0xa2, 0xb4, 0x4c, 0xd0, 0x20, 0x1c, 0x7a, 0x3c, 0x09, 0xa5, 0xde, 0xea, 0x69, 0xfd, 0x0d,
	0xbb, 0x95, 0x22, 0xa7, 0x29, 0x70, 0x7c, 0xd3, 0x80, 0xce, 0x15, 0xba, 0x27, 0xb3, 0x4f, 0xf9,
	0x05, 0xe3, 0x6b, 0xea, 0x21, 0xb9, 0x84, 0xd5, 0xcc, 0x24, 0xc8, 0x7e, 0xe9, 0x8b, 0xcb, 0x1b,
	0x8e, 0xf1, 0x62, 0x31, 0x29, 0x7b, 0xd3, 0xdf, 0xa1, 0x5b, 0xf4, 0x8b, 0x4b, 0xae, 0x86, 0x1c,
	0x95, 0xd6, 0x57, 0x98, 0x8b, 0xd1, 0xb5, 0xa6, 0x76, 0x68, 0xcd, 0xec, 0xd0, 0x7a, 0x9f, 0xda,
	0x21, 0xa1, 0x40, 0xd2, 0x6e, 0x79, 0x1f, 0x58, 0xee, 0x02, 0x56, 0x15, 0xa9, 0xc2, 0x54, 0x38,
	0x6c, 0x17, 0x93, 0x15, 0x97, 0xa8, 0xf0, 0x09, 0xe3, 0xd5, 0x92, 0xec, 0xf9, 0xee, 0x3a, 0x25,
	0x7f, 0x2f, 0x19, 0x94, 0x76, 0xa9, 0xfe, 0xcf, 0xab, 0x76, 0xf7, 0xee, 0xf0, 0xdb, 0x41, 0x40,
	0xe5, 0x28, 0x71, 0x2d, 0x8f, 0x8f, 0x07, 0xd3, 0xa6, 0x03, 0xea, 0x47, 0x83, 0x59, 0xd3, 0xf9,
	0x21, 0x72, 0xdd, 0xa6, 0x2a, 0x7e, 0xf3, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x56, 0xdd, 0xc3,
	0xde, 0x06, 0x00, 0x00,
}
